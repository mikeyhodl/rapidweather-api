import Head from "next/head";
import styles from "../styles/Home.module.css";
// import Script from "next/script";
import { useState, useEffect } from "react";
// import Image from "next/image";

const Weather = () => {
  const [location, setLocation] = useState("");
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(false);

  useEffect(() => {
    async function fetchWeather() {
      setLoading(true);
      setError(false);
      try {
        const myHeaders = new Headers();
        myHeaders.append(
          "X-RapidAPI-Key",
          process.env.NEXT_PUBLIC_ENV_VARIABLE
        );
        myHeaders.append("X-RapidAPI-Host", "weatherapi-com.p.rapidapi.com");

        const requestOptions = {
          method: "GET",
          headers: myHeaders,
          redirect: "follow",
        };

        const response = await fetch(
          `https://weatherapi-com.p.rapidapi.com/current.json?q=${location}`,
          requestOptions
        );

        const result = await response.json();
        if (result.error) {
          setError(result.error.message);
        } else {
          setWeather(result);
        }
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    }

    if (location) {
      fetchWeather();
    }
  }, [location]);

  return (
    <>
      <Head>
        <title>Weather App Sasakazi</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h2 className={styles.size}>Weather App by RapidAPI</h2>
        <br />
        <div>
          <form style={{ textAlign: "center" }}>
            <label htmlFor="location">
              <strong>Please enter your location:</strong>
            </label>
          </form>
        </div>
        <div id="weather" />
      </main>
      <div>
        <form
          onSubmit={(e) => {
            e.preventDefault();
            setLocation(e.target.location.value);
          }}
        >
          <input
            type="text"
            id="location"
            placeholder="Enter location"
            className="form-control"
          />
          <br />
          <button type="submit" className="btn btn-success">
            Get Weather
          </button>
          <br />
          <br />
        </form>
        {loading && (
          <p>
            <strong>Fetching...</strong>
          </p>
        )}
        {error && (
          <p>
            <strong>Error: {error}</strong>
          </p>
        )}
        {weather && weather.location && (
          <div id="weather">
            <h2>
              Weather in {weather.location.name}, {weather.location.country}{" "}
            </h2>
            <p>
              <strong>Current Local Time:</strong> {weather.location.localtime}
            </p>
            <p>
              <strong>Temperature:</strong> {weather.current.temp_c}&#176;C
            </p>
            <p>
              <strong>Weather:</strong> {weather.current.condition.text}
            </p>
            <picture>
            <img src={weather.current.condition.icon} alt="Weather icon" />
            </picture>
            <p>
              <strong>Wind speed:</strong> {weather.current.wind_kph} Km/h
            </p>
            <p>
              <strong>Humidity:</strong> {weather.current.humidity}&#37;
            </p>
            <p>
              <strong>Last Updated:</strong> {weather.current.last_updated}
            </p>
          </div>
        )}
      </div>
    </>
  );
};

export default Weather;
